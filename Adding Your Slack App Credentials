This is your StdLib auth token, 
click Show token to see its value and copy and paste it to your env.json file under STDLIB_TOKEN. 
Please note that dev values are for your dev environment and release values should only be populated when you’re ready to release your app.
Next, fill out SLACK_APP_NAME. You should differentiate between your dev / release apps — make sure this is unique for every app you build, as it sets a unique identifier for data storage / retrieval. For the dev environment you can set this to "Test App".
Finally, go back to your Slack App, and scroll down on the Basic Information panel:
/*******\
Copy each of these values to dev section of env.json: SLACK_CLIENT_ID, SLACK_CLIENT_SECRET, and SLACK_VERFICIATION_TOKEN.
As a last step, modify SLACK_REDIRECT to https://<username>.lib.id/slack-app@dev/auth/ where <username> is your StdLib username.
Minute 8: Deploying Your Slack App
Now that we’ve set added our commands, subscribed to events, and set the appropriate environment variables in our StdLib Slack service, we’re ready to push our app live! Simply redeploy with:
/***********\
$ lib up dev
Once complete, visit https://<username>.lib.id/slack-app@dev/ in your web browser — it should be available to be copy-and-pasted from your command line output. You’ll see a very simple “Add to Slack” button.
/********\
Add Your App to Slack
Click this button, and accept the requested permissions (we set them up previously), you’ll have to scroll down and click Authorize.
/*****\
Accept the Permissions Required by Your Test App
You’ll be returned to your specified auth callback, which should give a success message:
/******\
Great! You can now use your Slack App!
Please note, your bot is now “production-ready,” by authorizing access above and setting up commands and events, your bot is all ready to go — though you can invite your bot to specific channels, it is not necessary for the basic interaction model.
